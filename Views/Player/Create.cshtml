@model ClubManager.Models.Player

@{
    ViewBag.Title = "Create";
}

<h1 class="text-center m-30">Dodaj zawodnika</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.UserID, "Użytkownik", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (User.IsInRole("Admin"))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.ClubID, "Klub", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClubID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClubID, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.TeamID, "Zespół", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("TeamID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TeamID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShirtsNumber, "Numer koszulki", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ShirtsNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ShirtsNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MainPosition, "Pozycja", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MainPosition, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MainPosition, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LeadingLeg, "Noga", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.LeadingLeg, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LeadingLeg, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Height, "Wzrost", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group col-md-2">
                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control", @aria_describedby = "basic-addon2" } })
                <div class="input-group-addon">
                    <span class="input-group-text" id="basic-addon2">cm</span>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Weight, "Waga", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group col-md-2">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", @aria_describedby = "basic-addon2" } })
                <div class="input-group-addon">
                    <span class="input-group-text" id="basic-addon2">kg</span>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        <p class="col-md-offset-2 col-md-10 text-danger ">@ViewBag.ErrorMessage</p>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
